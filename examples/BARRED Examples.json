[{"id":"aa4084b2c094ae53","type":"tab","label":"BARRED Example","disabled":false,"info":"","env":[]},{"id":"f6eb7b92de9ce5c1","type":"group","z":"aa4084b2c094ae53","name":"Scan Response Examples","style":{"label":true},"nodes":["a9014b783cadce06","8e7610d870b5b852","3d30987b1d81231d","f3200a6984a152c9","fb8ec315cca8df37","024b44b517916f57","bedd6450777a60cb","bca9c643de0155d8","0a67371b8b126fd2","2a2a3baa15228bde","67aed41c21d8aae7"],"x":54,"y":159,"w":992,"h":202},{"id":"0b2117598e9b2b47","type":"group","z":"aa4084b2c094ae53","name":"Send Item Examples","style":{"label":true},"nodes":["779ddbcbc7432641","34eb3c8045989087","c454276c2c1b74ec","4c533eb6b3ffa35b","15ce01fe2c845556","9991583b4999d2c5"],"x":54,"y":399,"w":992,"h":202},{"id":"8ae28586d586a816","type":"group","z":"aa4084b2c094ae53","name":"Menu System Examples","style":{"label":true},"nodes":["72ca9e4522a5ad45","b07cb8b0001a4542","26e1dff8a15026d8","64e1f4fb7cba6730","79591097a25ab26a","9595975f16de1d44","204fd0a06ed89a61","17c055c9b73c3383","486cddc621b99e36","7828dc09d611fcd7","75ad321b1500a2af","3f6b537413d19932","3339b1baf17e765c","4654444dc35b2a84","65dbc90d7499a539","e84295d29b9a7b1c","b783a82bb48b885b"],"x":54,"y":639,"w":1012,"h":322},{"id":"8e7610d870b5b852","type":"junction","z":"aa4084b2c094ae53","g":"f6eb7b92de9ce5c1","x":760,"y":200,"wires":[["a9014b783cadce06"]]},{"id":"9991583b4999d2c5","type":"junction","z":"aa4084b2c094ae53","g":"0b2117598e9b2b47","x":480,"y":560,"wires":[["15ce01fe2c845556"]]},{"id":"0a67371b8b126fd2","type":"junction","z":"aa4084b2c094ae53","g":"f6eb7b92de9ce5c1","x":760,"y":240,"wires":[["a9014b783cadce06"]]},{"id":"67aed41c21d8aae7","type":"junction","z":"aa4084b2c094ae53","g":"f6eb7b92de9ce5c1","x":360,"y":280,"wires":[["2a2a3baa15228bde"]]},{"id":"79591097a25ab26a","type":"junction","z":"aa4084b2c094ae53","g":"8ae28586d586a816","x":760,"y":720,"wires":[["64e1f4fb7cba6730"]]},{"id":"17c055c9b73c3383","type":"junction","z":"aa4084b2c094ae53","g":"8ae28586d586a816","x":760,"y":840,"wires":[["64e1f4fb7cba6730"]]},{"id":"7828dc09d611fcd7","type":"junction","z":"aa4084b2c094ae53","g":"8ae28586d586a816","x":320,"y":920,"wires":[["486cddc621b99e36"]]},{"id":"3339b1baf17e765c","type":"junction","z":"aa4084b2c094ae53","g":"8ae28586d586a816","x":760,"y":760,"wires":[["64e1f4fb7cba6730"]]},{"id":"4654444dc35b2a84","type":"junction","z":"aa4084b2c094ae53","g":"8ae28586d586a816","x":760,"y":800,"wires":[["64e1f4fb7cba6730"]]},{"id":"e84295d29b9a7b1c","type":"junction","z":"aa4084b2c094ae53","g":"8ae28586d586a816","x":760,"y":880,"wires":[["64e1f4fb7cba6730"]]},{"id":"3d30987b1d81231d","type":"barred-barcode","z":"aa4084b2c094ae53","g":"f6eb7b92de9ce5c1","name":"Incoming Barcodes","stack":"6590f3e54308f98b","x":170,"y":200,"wires":[["67aed41c21d8aae7","f3200a6984a152c9"]]},{"id":"a9014b783cadce06","type":"barred-result","z":"aa4084b2c094ae53","g":"f6eb7b92de9ce5c1","name":"Send Result","defaultStatus":"OK","x":950,"y":240,"wires":[[]]},{"id":"08f8b5a7a768b049","type":"function","z":"aa4084b2c094ae53","name":"Setup DB Example (On Start)","func":"","outputs":1,"timeout":0,"noerr":0,"initialize":"/* \n   An example database\n   This can be any strorage mechanism/Object collection that you want\n   This is just for demonstration purposes\n\n   It could even happen in real time, I'm just storing/creating it here (during runtime)\n*/\n\nconst DB = [{\n        SerialNumber: '12345',\n        Item: 'Raspberry Pi5',\n        RAM_GB: 8,\n        Storage: 'NVMe',\n        Storage_GB: 512,\n        PSU: 'Genuine Pi5 PSU',\n        Purpose: 'Running Node RED',\n        Notes: '\\nThis unit seems to be failing, and should be replaced' /* Notice the line break */\n    }\n]\n\nglobal.set('DB',DB)","finalize":"","libs":[],"x":180,"y":100,"wires":[[]]},{"id":"f3200a6984a152c9","type":"function","z":"aa4084b2c094ae53","g":"f6eb7b92de9ce5c1","name":"Return Item | | Error","func":"/*\n   Here, we are just searching for an item (SerialNumber === Barcode),\n   Returning it, else just showing an error to the scanner\n\n   Statuses : OK, ERROR, INFO, MENU\n   Further examples of each status later\n*/\n\nconst DB = global.get('DB')\nconst Barcode = msg.payload.barcode.barcode;\n\n// Default Response\nmsg.status = 'ERROR'\nmsg.payload = `The item with Serial Number: ${Barcode} was not found`\n\n// Find Match\nconst fetchedItem = DB.find((item) => item.SerialNumber === Barcode)\n\n// Alter Response if found\nif(fetchedItem){\n    msg.status = 'OK' \n    msg.payload = fetchedItem  /* Payload can also be an object - which gets formatted on the scanner */\n}\n\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":530,"y":200,"wires":[["8e7610d870b5b852"]]},{"id":"504b348eb561f7b5","type":"comment","z":"aa4084b2c094ae53","name":"Example Database Setup : Test Item Barcode => 12345","info":"","x":260,"y":60,"wires":[]},{"id":"779ddbcbc7432641","type":"inject","z":"aa4084b2c094ae53","g":"0b2117598e9b2b47","name":"Send to All Scanners","props":[{"p":"payload"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":200,"y":440,"wires":[["15ce01fe2c845556"]]},{"id":"34eb3c8045989087","type":"inject","z":"aa4084b2c094ae53","g":"0b2117598e9b2b47","name":"Send to a specific Scanner","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX","payload":"","payloadType":"date","x":210,"y":560,"wires":[["9991583b4999d2c5"]]},{"id":"fb8ec315cca8df37","type":"function","z":"aa4084b2c094ae53","g":"f6eb7b92de9ce5c1","name":"Return Item | | Request Info","func":"/*\n   Here, we are just searching for an item (SerialNumber === Barcode),\n   Returning it, else asking for its information (prefilling the serial number with the barcode)\n*/\n\nconst DB = global.get(\"DB\")\nconst Barcode = msg.payload.barcode.barcode;\n\n// Default Response\n/* \n   To present an input screen, we provide the property names and types.\n   If a type is not one of the below, it will simply set it to the provided value (and mark it as read only)\n   \n   Types : string, ml_string, number, date, time\n*/\nmsg.status = 'INFO' \nmsg.payload = {\n    SerialNumber: Barcode,\n    Item: 'string',\n    RAMGB: 'number',\n    Storage: 'string',\n    StorageGB: 'number',\n    PSU: 'string',\n    Purpose: 'string',\n    Notes: 'ml_string'\n}\n\n// Alter Response if found\nconst fetchedItem = DB.find((item) => item.SerialNumber === Barcode)\nif(fetchedItem){\n    msg.status = 'OK' \n    msg.payload = fetchedItem \n}\n\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":560,"y":240,"wires":[["0a67371b8b126fd2"]]},{"id":"024b44b517916f57","type":"function","z":"aa4084b2c094ae53","g":"f6eb7b92de9ce5c1","name":"Add Provided item info to DB (Response to Request Info)","func":"/* \n   You dont have to provide a response (for anything)\n   if you dont want to - But you really should for the user XP\n*/\n\nconst DB = global.get('DB')\nDB.push(msg.payload.item)\n\n\n","outputs":0,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":650,"y":320,"wires":[]},{"id":"bedd6450777a60cb","type":"barred-item","z":"aa4084b2c094ae53","g":"f6eb7b92de9ce5c1","name":"Incoming Items","stack":"6590f3e54308f98b","x":160,"y":320,"wires":[["024b44b517916f57","67aed41c21d8aae7"]]},{"id":"bca9c643de0155d8","type":"comment","z":"aa4084b2c094ae53","g":"f6eb7b92de9ce5c1","name":"One or the other response (you are in control)","info":"","x":250,"y":240,"wires":[]},{"id":"c454276c2c1b74ec","type":"comment","z":"aa4084b2c094ae53","g":"0b2117598e9b2b47","name":"Grab a Scanner ID from the  Config Node","info":"","x":240,"y":520,"wires":[]},{"id":"4c533eb6b3ffa35b","type":"barred-send-item","z":"aa4084b2c094ae53","g":"0b2117598e9b2b47","name":"Send to Scanners","stack":"6590f3e54308f98b","x":930,"y":440,"wires":[[]]},{"id":"15ce01fe2c845556","type":"function","z":"aa4084b2c094ae53","g":"0b2117598e9b2b47","name":"Message","func":"/* \n   Any value can have Emojis (even in a response)\n*/\n\nmsg.payload = `\n - Hello from Node RED ðŸ‘‹\n - Can this also be an object?: âœ…`\n\n return msg","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":580,"y":440,"wires":[["4c533eb6b3ffa35b"]]},{"id":"2a2a3baa15228bde","type":"debug","z":"aa4084b2c094ae53","g":"f6eb7b92de9ce5c1","name":"debug 1","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":940,"y":280,"wires":[]},{"id":"7e6c91738ab2a8f7","type":"comment","z":"aa4084b2c094ae53","name":"Edit the config to update IP Address & Add A scanner","info":"","x":840,"y":60,"wires":[]},{"id":"72ca9e4522a5ad45","type":"function","z":"aa4084b2c094ae53","g":"8ae28586d586a816","name":"Default Menu","func":"/* \n   The menu structure consists of a payload\n   Key   : Display Label\n   Value :\n           action     : The name of the action (used by the example switch node),\n           scan       : Scan first  - this allows to include a barcode with the action (barcode)\n           destructive: Sets the button color to red (else your theme color)\n           context    : Include some context in the action payload (context)\n\n\n*/\n\nmsg.status = 'MENU'                     \nmsg.topic = 'BARRED Menu'  /* Menu Title */\nmsg.payload = {\n    'Add Item': { action: 'ADD',  scan: true },\n    'Developer Menu': { action: 'DEVELOPER', context: {foo:'bar'} },\n    'Delete Item': { action: 'DELETE', destructive: true, scan: true },\n\n}\n\nreturn msg","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":620,"y":720,"wires":[["79591097a25ab26a"]]},{"id":"b07cb8b0001a4542","type":"barred-action","z":"aa4084b2c094ae53","g":"8ae28586d586a816","name":"Incoming Actions","stack":"6590f3e54308f98b","x":180,"y":800,"wires":[["7828dc09d611fcd7","26e1dff8a15026d8"]]},{"id":"26e1dff8a15026d8","type":"switch","z":"aa4084b2c094ae53","g":"8ae28586d586a816","name":"","property":"payload.action.name","propertyType":"msg","rules":[{"t":"eq","v":"DEFAULT","vt":"str"},{"t":"eq","v":"ADD","vt":"str"},{"t":"eq","v":"DELETE","vt":"str"},{"t":"eq","v":"DEVELOPER","vt":"str"},{"t":"eq","v":"ABOUT","vt":"str"}],"checkall":"true","repair":false,"outputs":5,"x":410,"y":800,"wires":[["72ca9e4522a5ad45"],["3f6b537413d19932"],["9595975f16de1d44"],["204fd0a06ed89a61"],["65dbc90d7499a539"]]},{"id":"64e1f4fb7cba6730","type":"barred-result","z":"aa4084b2c094ae53","g":"8ae28586d586a816","name":"Send Result","defaultStatus":"OK","x":970,"y":800,"wires":[[]]},{"id":"9595975f16de1d44","type":"function","z":"aa4084b2c094ae53","g":"8ae28586d586a816","name":"DELETE","func":"// Get DB\nconst DB = global.get('DB')\n\n// Delete\nconst index = DB.findIndex(i => i.Barcode === msg.payload.barcode.barcode);\nif (index !== -1) DB.splice(index, 1);\n\nmsg.status = 'OK'\nmsg.payload = `Item with barcode : ${msg.payload.barcode.barcode} deleted`\n\nreturn msg","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":600,"y":800,"wires":[["4654444dc35b2a84"]]},{"id":"204fd0a06ed89a61","type":"function","z":"aa4084b2c094ae53","g":"8ae28586d586a816","name":"DEVELOPER","func":"/* \n   Lets show a different menu - notice the route back to the Default Manu\n*/\n\nmsg.status = 'MENU'                   \nmsg.topic = 'Developer Menu'         \nmsg.payload = {\n    'About': { action: 'ABOUT'},\n    'Main Menu': { action: 'DEFAULT'},\n\n}\n\nreturn msg","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":610,"y":840,"wires":[["17c055c9b73c3383"]]},{"id":"486cddc621b99e36","type":"debug","z":"aa4084b2c094ae53","g":"8ae28586d586a816","name":"debug 2","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":960,"y":920,"wires":[]},{"id":"75ad321b1500a2af","type":"comment","z":"aa4084b2c094ae53","g":"8ae28586d586a816","name":"The \"M\" button on the client always sends \"DEFAULT\"","info":"","x":740,"y":680,"wires":[]},{"id":"3f6b537413d19932","type":"function","z":"aa4084b2c094ae53","g":"8ae28586d586a816","name":"ADD","func":"/* \n   As this action route caontained a scan:true value - we can use it's barcode\n*/\n\nmsg.status = 'INFO' \nmsg.payload = {\n    SerialNumber: msg.payload.barcode.barcode,        \n    Item: 'string',\n    RAMGB: 'number',\n    Storage: 'string',\n    StorageGB: 'number',\n    PSU: 'string',\n    Purpose: 'string',\n    Notes: 'ml_string'\n}\n\n\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":590,"y":760,"wires":[["3339b1baf17e765c"]]},{"id":"65dbc90d7499a539","type":"function","z":"aa4084b2c094ae53","g":"8ae28586d586a816","name":"ABOUT","func":"msg.status = 'OK'\nmsg.payload = 'Proudly developed by Marcus Davies\\nhttps://github.com/marcus-j-davies'\n\nreturn msg","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":600,"y":880,"wires":[["e84295d29b9a7b1c"]]},{"id":"b783a82bb48b885b","type":"comment","z":"aa4084b2c094ae53","g":"8ae28586d586a816","name":"Lets branch out based on payload.action.name","info":"","x":260,"y":740,"wires":[]},{"id":"b60c6750206eed6b","type":"comment","z":"aa4084b2c094ae53","name":"Config can be accessed by most of the BARRED Nodes","info":"","x":850,"y":100,"wires":[]},{"id":"6590f3e54308f98b","type":"barred-config","name":"BARRED Config","department":"BARRED INC","color":"#00a3d7","rate":1000,"rtimeout":500,"scanners":{},"host":"X.X.X.X","port":59149},{"id":"82459e43e9e67577","type":"global-config","env":[],"modules":{"@marcus-j-davies/node-red-barred":"1.1.0"}}]